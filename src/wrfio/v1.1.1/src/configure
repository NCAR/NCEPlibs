# configure.upp
#
# This file was automatically generated by the configure script in the
# top level directory. You may make changes to the settings in this
# file but be aware they will be overwritten each time you run configure.
# Ordinarily, it is necessary to run configure once, when the code is
# first installed.
#
# To permanently change options, change the settings for your platform
# in the file arch/configure.defaults then rerun configure.
#

SHELL           	=       /bin/sh

LDFLAGS_MPI             =     # to be overridden later

#### Architecture specific settings ####

# Settings for Linux x86_64, Intel compiler	 (dmpar)#
SFC     = $(mySFC)
SF90    = $(mySFC) -free
SCC     = icc

DM_FC  = $(myFC) 
DM_F90 = $(myFC) -free 
DM_CC  = mpicc 

FC      = $(DM_FC)
F90     = $(DM_F90)
CC      = $(DM_CC)
CPP     = /lib/cpp

LINUX_OBJ     =
BYTE_ORDER    = UPPLITTLEENDIAN
SIZE_I8R8   = -r8 -i8
SIZE_I4R8   = -r8 -i4
SIZE_I4R4   = -r4 -i4
SIZE        =

PPDEFINE   = -DCOMMCODE -DLINUX -D$(BYTE_ORDER)
FPPDEFINE  = $(PPDEFINE)

FDEBUG  = -O0 -g -traceback -check all -ftrapuv -fpe0
CRTMDBUG= -O0 -g -traceback -check all -ftrapuv -fpe0
CDEBUG  = -O0 -g -traceback -debug all -Wall -check-uninit

FOPT    = -O3 
CRTMOPT = -O3
COPT    = -O3

CPP_FLAGS = -P -traditional-cpp $(FPPDEFINE)
INC_FLAGS =
LDFLAGS   = -Wl,-noinhibit-exec 
FFLAGS    = -fp-model source -ftz -assume byterecl -convert big_endian \
            -heap-arrays $(SIZE) $(FPPDEFINE) $(FOPT)
CFLAGS    = $(PPDEFINE) $(COPT)
ARFLAGS   = ru

###########################################################
#
#	Macros, these should be generic for all machines
LN		=   ln -sf
MAKE  =   make
RM		=   /bin/rm -f
CP		=   /bin/cp
MV              =   /bin/mv
AR		=   ar
RANLIB		=   ranlib

WRF_DIR         =   `pwd`
WRF_LIB2        =    
NETCDFPATH      =   $(NETCDF)
NETCDFLIBS      =    -lnetcdff -lnetcdf

COMMS_ADD_OBJ   =    
COMMS_ADD_OBJST =    
COMMS_LIB       =    

SERIAL_MPI_STUB =    
SERIAL_MPI_LIB  =    

PARALLEL_FLAG   =    -DDM_PARALLEL

#GRIB2SUPT_LIB   =    -L/opt/local/lib -ljasper -lpng -lz
#GRIB2SUPT_INC   =    -I/opt/local/include

#BINDIR          =    /u/Wen.Meng/ptmp/dtc/EMC_post/comupp/bin
#INCMOD          =    /u/Wen.Meng/ptmp/dtc/EMC_post/comupp/include
#LIBDIR          =    /u/Wen.Meng/ptmp/dtc/EMC_post/comupp/lib

WRF_LIB         = -L$(WRF_DIR) -lwrfio

#
# These files may be changed to enable other files with the same 
# functions definitions, but different logic.  This is typically
# how backward compatibilty is achieved for the community code.
#GRIBIT = GRIBIT.f
#CALRAD = CALRAD_WCLOUD_crtm.f

# There is probably no reason to modify these rules
#.SUFFIXES : .c .f .f90
#.c.o:
#	$(CC) $(CFLAGS) $(EXTRA_CFLAGS)  $<
#
#.f.o:
#	$(FC) $(FFLAGS) $(EXTRA_FFLAGS) $<
#
#.f90.o :
#	$(F90) $(FFLAGS) $(EXTRA_FFLAGS) $<
#
#.F.o:
#	$(CPP) $(CPP_FLAGS) $< > $*.f
#	$(FC) $(FFLAGS) $(EXTRA_FFLAGS) $<
#
#.F90.o:
#	$(CPP) $(CPP_FLAGS) $< > $*.f90
#	$(F90) $(FFLAGS) $(EXTRA_FFLAGS) $<
